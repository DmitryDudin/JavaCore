------------------------------------------------------------------------------------------------------------------------
<?> и Raw типы:

Ниже приведен wildcard с неограниченным символом подстановки. Мы просто ставим <?>, без ключевых слов super или extends:
        static void printCollection(Collection<?> c) {
           // a wildcard collection
           for (Object o : c) {
               System.out.println(o);
           }
        }

На самом деле такой «неограниченный» wildcard все-таки ограничен, сверху.
Collection<?> — это тоже символ подстановки, как и "? extends Object".
Запись вида Collection<?> равносильна Collection<? extends Object> ,
а значит — коллекция может содержать объекты любого класса,
так как все классы в Java наследуются от Object – поэтому подстановка называется неограниченной.

Если мы опустим указание типа, например, как здесь:

        ArrayList arrayList = new ArrayList();

то, говорят, что ArrayList — это Raw тип параметризованного ArrayList<T>.
Используя Raw типы, мы возвращаемся в эру до дженериков и сознательно отказываемся от всех фич,
присущих параметризованным типам.

Если мы попытаемся вызвать параметризованный метода у Raw типа, то компилятор выдаст нам предупреждение «Unchecked call».
Если мы попытаемся выполнить присваивание ссылки на параметризованный тип Raw типу,
то компилятор выдаст предупреждение «Unchecked assignment».
Игнорирование этих предупреждений, как мы увидим позже, может привести к ошибкам во время выполнения нашего приложения.

        ArrayList<String> strings = new ArrayList<>();
        ArrayList arrayList = new ArrayList();
        arrayList = strings; // Ok
        strings = arrayList; // Unchecked assignment
        arrayList.add(1); //unchecked call
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
